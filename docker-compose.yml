#  MYSQL_DATABASE: test_db
#  MYSQL_USER: ronit
#  MYSQL_PASSWORD: gablu
# -----
# contnr1: db (mariadb) @port:3306
# contnr2: backend (expressjs) @port:4000
# contnr3: frontend (reactjs) @port:5000
# contnr4: nginx (proxy) @port:80
# contnr5: adminer @port:8080
# ------

services:
  db:
    image: mariadb
    container_name: db
    restart: always
    volumes:
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
    ports:
      - 3306:3306
    environment:
      MARIADB_ROOT_PASSWORD: rootpass  # for root user login
      MARIADB_DATABASE: test_db # creates database automatically
      MARIADB_USER: ronit
      MARIADB_PASSWORD: gablu

  backend:
    container_name: backend
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./backend
    depends_on:
      - db
    ports:
      - 4000:4000 # port defined in /backend/index.js, Dockerfile 
    environment:
      MARIADB_HOST: db     # used in /backend/db/ConnectDB.js
      MARIADB_DATABASE: test_db  # used in /backend/db/ConnectDB.js
      MARIADB_USER: ronit   # used in /backend/db/ConnectDB.js
      MARIADB_PASSWORD: gablu # used in /backend/db/ConnectDB.js
      DB_TABLENAME: tbl_users # used in /backend/routes/DBOperRoutes.js


  frontend:
    container_name: frontend
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./frontend
    depends_on:
      - backend
    ports:
      - "5000:5000"
    command:
      "npm run dev -- --host"
    environment:
      - BACKEND_API_URL=http://192.168.0.102:4000 # used in /src/components/Table.jsx, /modals/
      



  nginx-proxy:
    container_name: nginx-proxy
    depends_on:
      - backend
      - frontend
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - 80:80



  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db
